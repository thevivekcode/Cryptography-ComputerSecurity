This is a small simulation based on HEARTBLEED bug used to exploit the OpenSSL v1.01
This is based on client-sever model where OpenSSL provides security over https webpages.

HOW TO RUN:

    RUN SERVER:
        ***python server.py***

    RUN CLIENT:        this is executed on differnt terminal. (Server must be running)
        ***python client.py***

        Now you can use terminal running client to communicate to server which is considered safe due to OpenSSL secure SSL/TSL.
        Client while communicating to server send periodic heartbeat/keepALive request to check the Connection
        => To end connection with client enter "bye" in the terminal

    RUN ATTACKER:      this is executed after connection with client is closed. (Server must be running)
        ***python attacker.py***

        Attacker will exploit the HEARTBLEED vulnerability to gain access to confidential data.
        It sends randomly large size as parameter in heartbeat request than the actual payload  collect random data in cache.
        The data received from cache can sometimes contain very sensitive inforamtion.

        Hence attacker is able to exploit the vulnerability in OpenSSL.
